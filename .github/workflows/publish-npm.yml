name: Publish NPM Package

on:
  push:
    branches:
      - main

jobs:
  check_author:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.check_author.outputs.skip }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check for automated publish
        id: check_author
        run: |
          COMMIT_AUTHOR=$(git log --format=%an -n 1)
          if [[ "$COMMIT_AUTHOR" == "Automated publish" ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

  publish:
    needs: check_author
    if: ${{ needs.check_author.outputs.should_skip == 'false' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: "npm"

#      - name: Install dependencies
#        run: npm ci

      - name: Determine version bump
        id: version_bump
        run: |
          COMMIT_MSG=$(git log --format=%B -n 1)
          if [[ $COMMIT_MSG == \[major\]* ]]; then
            echo "::set-output name=version_bump::major"
          elif [[ $COMMIT_MSG == \[minor\]* ]]; then
            echo "::set-output name=version_bump::minor"
          elif [[ $COMMIT_MSG == \[patch\]* ]]; then
            echo "::set-output name=version_bump::patch"
          else
            echo "Commit message does not specify a version bump type."
            exit 1
          fi

      - name: Configure Git
        run: |
          git config user.name "Automated publish"
          git config user.email "W4rd3s@users.noreply.github.com"

      - name: Bump version
        run: npm version ${{ steps.version_bump.outputs.version_bump }} --no-git-tag-version

      - name: Commit and push changes
        run: |
          git add package.json package-lock.json
          git commit -m "Bump version to $(node -p "require('./package.json').version")"
          git tag "v$(node -p "require('./package.json').version")"
          git push --follow-tags

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
